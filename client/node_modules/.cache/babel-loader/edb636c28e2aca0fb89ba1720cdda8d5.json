{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\danie\\\\Documents\\\\web_projects\\\\react_redux_gallery\\\\client\\\\src\\\\components\\\\pages\\\\Signup.jsx\";\nimport React from 'react';\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\nimport * as Yup from 'yup';\nimport { connect } from 'react-redux';\nimport { signUp } from '../../redux/auth/authActions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Signup = props => {\n  const initialValues = {\n    email: '',\n    password: ''\n  };\n  const validationSchema = Yup.object({\n    email: Yup.string().email('Invalid email address').required('Required'),\n    password: Yup.string().min(8, 'Password must be at least 8 characters long').required('Required')\n  });\n\n  const onSubmit = (values, onSubmitProps) => {\n    props.signUp(values);\n    onSubmitProps.resetForm();\n  };\n\n  return /*#__PURE__*/_jsxDEV(Formik, {\n    initialValues: initialValues,\n    validationSchema: validationSchema,\n    onSubmit: onSubmit,\n    validateOnMount: true,\n    children: formik => {\n      return /*#__PURE__*/_jsxDEV(Form, {\n        className: \"form\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Signup\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"email\",\n            children: \"Email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 8\n          }, this), /*#__PURE__*/_jsxDEV(Field, {\n            type: \"text\",\n            name: \"email\",\n            className: \"input\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 8\n          }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n            name: \"email\",\n            component: \"p\",\n            className: \"form-error-message\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 8\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"password\",\n            children: \"Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 8\n          }, this), /*#__PURE__*/_jsxDEV(Field, {\n            type: \"password\",\n            name: \"password\",\n            className: \"input\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 8\n          }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n            name: \"password\",\n            component: \"p\",\n            className: \"form-error-message\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 8\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"button primary-button\",\n          disabled: !formik.isValid,\n          children: \"Sign Up\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 6\n      }, this);\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 3\n  }, this);\n};\n\n_c = Signup;\n\nconst mapStateToProps = state => {\n  return {\n    user: state.user\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    signUp: values => {\n      dispatch(signUp(values));\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Signup);\n\nvar _c;\n\n$RefreshReg$(_c, \"Signup\");","map":{"version":3,"sources":["C:/Users/danie/Documents/web_projects/react_redux_gallery/client/src/components/pages/Signup.jsx"],"names":["React","Formik","Form","Field","ErrorMessage","Yup","connect","signUp","Signup","props","initialValues","email","password","validationSchema","object","string","required","min","onSubmit","values","onSubmitProps","resetForm","formik","isValid","mapStateToProps","state","user","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport { connect } from 'react-redux';\r\nimport { signUp } from '../../redux/auth/authActions';\r\n\r\nconst Signup = (props) => {\r\n\tconst initialValues = {\r\n\t\temail: '',\r\n\t\tpassword: ''\r\n\t};\r\n\r\n\tconst validationSchema = Yup.object({\r\n\t\temail: Yup.string().email('Invalid email address').required('Required'),\r\n\t\tpassword: Yup.string()\r\n\t\t\t.min(8, 'Password must be at least 8 characters long')\r\n\t\t\t.required('Required')\r\n\t});\r\n\r\n\tconst onSubmit = (values, onSubmitProps) => {\r\n\t\tprops.signUp(values);\r\n\t\tonSubmitProps.resetForm();\r\n\t};\r\n\r\n\treturn (\r\n\t\t<Formik\r\n\t\t\tinitialValues={initialValues}\r\n\t\t\tvalidationSchema={validationSchema}\r\n\t\t\tonSubmit={onSubmit}\r\n\t\t\tvalidateOnMount>\r\n\t\t\t{(formik) => {\r\n\t\t\t\treturn (\r\n\t\t\t\t\t<Form className='form'>\r\n\t\t\t\t\t\t<h2>Signup</h2>\r\n\t\t\t\t\t\t<div className='form-group'>\r\n\t\t\t\t\t\t\t<label htmlFor='email'>Email</label>\r\n\t\t\t\t\t\t\t<Field type='text' name='email' className='input' />\r\n\t\t\t\t\t\t\t<ErrorMessage\r\n\t\t\t\t\t\t\t\tname='email'\r\n\t\t\t\t\t\t\t\tcomponent='p'\r\n\t\t\t\t\t\t\t\tclassName='form-error-message'\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className='form-group'>\r\n\t\t\t\t\t\t\t<label htmlFor='password'>Password</label>\r\n\t\t\t\t\t\t\t<Field type='password' name='password' className='input' />\r\n\t\t\t\t\t\t\t<ErrorMessage\r\n\t\t\t\t\t\t\t\tname='password'\r\n\t\t\t\t\t\t\t\tcomponent='p'\r\n\t\t\t\t\t\t\t\tclassName='form-error-message'\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<button\r\n\t\t\t\t\t\t\ttype='submit'\r\n\t\t\t\t\t\t\tclassName='button primary-button'\r\n\t\t\t\t\t\t\tdisabled={!formik.isValid}>\r\n\t\t\t\t\t\t\tSign Up\r\n\t\t\t\t\t\t</button>\r\n\t\t\t\t\t</Form>\r\n\t\t\t\t);\r\n\t\t\t}}\r\n\t\t</Formik>\r\n\t);\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n\treturn {\r\n\t\tuser: state.user\r\n\t};\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n\treturn {\r\n\t\tsignUp: (values) => {\r\n\t\t\tdispatch(signUp(values));\r\n\t\t}\r\n\t};\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Signup);\r\n"]},"metadata":{},"sourceType":"module"}
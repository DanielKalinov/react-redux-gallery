{"ast":null,"code":"import axios from 'axios';\nconst SIGNUP_REQUEST = 'react-redux-gallery/auth/SIGNUP_REQUEST';\nconst SIGNUP_SUCCESS = 'react-redux-gallery/auth/SIGNUP_SUCCESS';\nconst SIGNUP_FAILURE = 'react-redux-gallery/auth/SIGNUP_FAILURE';\nconst LOGIN_REQUEST = 'react-redux-gallery/auth/LOGIN_REQUEST';\nconst LOGIN_SUCCESS = 'react-redux-gallery/auth/LOGIN_SUCCESS';\nconst LOGIN_FAILURE = 'react-redux-gallery/auth/LOGIN_FAILURE';\nconst initialState = {\n  user: {\n    email: ''\n  },\n  loading: false,\n  error: null\n};\nexport default function reducer(state = initialState, action) {\n  switch (action.type) {\n    case SIGNUP_REQUEST:\n      {\n        return { ...state,\n          loading: true\n        };\n      }\n\n    case SIGNUP_SUCCESS:\n      {\n        return { ...state,\n          loading: false,\n          error: null\n        };\n      }\n\n    case SIGNUP_FAILURE:\n      {\n        return { ...state,\n          loading: false,\n          error: action.payload\n        };\n      }\n\n    default:\n      {\n        return state;\n      }\n  }\n}\nexport const signupRequest = () => {\n  return {\n    type: SIGNUP_REQUEST\n  };\n};\nexport const signupSuccess = user => {\n  return {\n    type: SIGNUP_SUCCESS\n  };\n};\nexport const signupFailure = error => {\n  return {\n    type: SIGNUP_FAILURE,\n    payload: error\n  };\n};\nexport const loginRequest = () => {\n  return {\n    type: LOGIN_REQUEST\n  };\n};\nexport const loginSuccess = user => {\n  return {\n    type: LOGIN_SUCCESS,\n    payload: user\n  };\n};\nexport const loginFailure = error => {\n  return {\n    type: LOGIN_FAILURE,\n    payload: error\n  };\n};\nexport const signUp = values => {\n  return dispatch => {\n    dispatch(signupRequest());\n    axios.post('http://localhost:3000/signup', {\n      values\n    }).then(res => {}).catch(error => {\n      const {\n        message\n      } = error.response.data;\n      dispatch(signupFailure(message));\n    });\n  };\n};\nexport const logIn = values => {\n  return dispatch => {\n    dispatch(loginRequest);\n  };\n};","map":{"version":3,"sources":["C:/Users/danie/Documents/web-projects/react-redux-gallery/client/src/redux/ducks/auth.js"],"names":["axios","SIGNUP_REQUEST","SIGNUP_SUCCESS","SIGNUP_FAILURE","LOGIN_REQUEST","LOGIN_SUCCESS","LOGIN_FAILURE","initialState","user","email","loading","error","reducer","state","action","type","payload","signupRequest","signupSuccess","signupFailure","loginRequest","loginSuccess","loginFailure","signUp","values","dispatch","post","then","res","catch","message","response","data","logIn"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,MAAMC,cAAc,GAAG,yCAAvB;AACA,MAAMC,cAAc,GAAG,yCAAvB;AACA,MAAMC,cAAc,GAAG,yCAAvB;AAEA,MAAMC,aAAa,GAAG,wCAAtB;AACA,MAAMC,aAAa,GAAG,wCAAtB;AACA,MAAMC,aAAa,GAAG,wCAAtB;AAEA,MAAMC,YAAY,GAAG;AACpBC,EAAAA,IAAI,EAAE;AACLC,IAAAA,KAAK,EAAE;AADF,GADc;AAIpBC,EAAAA,OAAO,EAAE,KAJW;AAKpBC,EAAAA,KAAK,EAAE;AALa,CAArB;AAQA,eAAe,SAASC,OAAT,CAAiBC,KAAK,GAAGN,YAAzB,EAAuCO,MAAvC,EAA+C;AAC7D,UAAQA,MAAM,CAACC,IAAf;AACC,SAAKd,cAAL;AAAqB;AACpB,eAAO,EAAE,GAAGY,KAAL;AAAYH,UAAAA,OAAO,EAAE;AAArB,SAAP;AACA;;AACD,SAAKR,cAAL;AAAqB;AACpB,eAAO,EAAE,GAAGW,KAAL;AAAYH,UAAAA,OAAO,EAAE,KAArB;AAA4BC,UAAAA,KAAK,EAAE;AAAnC,SAAP;AACA;;AACD,SAAKR,cAAL;AAAqB;AACpB,eAAO,EAAE,GAAGU,KAAL;AAAYH,UAAAA,OAAO,EAAE,KAArB;AAA4BC,UAAAA,KAAK,EAAEG,MAAM,CAACE;AAA1C,SAAP;AACA;;AACD;AAAS;AACR,eAAOH,KAAP;AACA;AAZF;AAcA;AAED,OAAO,MAAMI,aAAa,GAAG,MAAM;AAClC,SAAO;AACNF,IAAAA,IAAI,EAAEd;AADA,GAAP;AAGA,CAJM;AAMP,OAAO,MAAMiB,aAAa,GAAIV,IAAD,IAAU;AACtC,SAAO;AACNO,IAAAA,IAAI,EAAEb;AADA,GAAP;AAGA,CAJM;AAMP,OAAO,MAAMiB,aAAa,GAAIR,KAAD,IAAW;AACvC,SAAO;AACNI,IAAAA,IAAI,EAAEZ,cADA;AAENa,IAAAA,OAAO,EAAEL;AAFH,GAAP;AAIA,CALM;AAOP,OAAO,MAAMS,YAAY,GAAG,MAAM;AACjC,SAAO;AACNL,IAAAA,IAAI,EAAEX;AADA,GAAP;AAGA,CAJM;AAMP,OAAO,MAAMiB,YAAY,GAAIb,IAAD,IAAU;AACrC,SAAO;AACNO,IAAAA,IAAI,EAAEV,aADA;AAENW,IAAAA,OAAO,EAAER;AAFH,GAAP;AAIA,CALM;AAOP,OAAO,MAAMc,YAAY,GAAIX,KAAD,IAAW;AACtC,SAAO;AACNI,IAAAA,IAAI,EAAET,aADA;AAENU,IAAAA,OAAO,EAAEL;AAFH,GAAP;AAIA,CALM;AAOP,OAAO,MAAMY,MAAM,GAAIC,MAAD,IAAY;AACjC,SAAQC,QAAD,IAAc;AACpBA,IAAAA,QAAQ,CAACR,aAAa,EAAd,CAAR;AACAjB,IAAAA,KAAK,CACH0B,IADF,CACO,8BADP,EACuC;AAAEF,MAAAA;AAAF,KADvC,EAEEG,IAFF,CAEQC,GAAD,IAAS,CAAE,CAFlB,EAGEC,KAHF,CAGSlB,KAAD,IAAW;AACjB,YAAM;AAAEmB,QAAAA;AAAF,UAAcnB,KAAK,CAACoB,QAAN,CAAeC,IAAnC;AACAP,MAAAA,QAAQ,CAACN,aAAa,CAACW,OAAD,CAAd,CAAR;AACA,KANF;AAOA,GATD;AAUA,CAXM;AAaP,OAAO,MAAMG,KAAK,GAAIT,MAAD,IAAY;AAChC,SAAQC,QAAD,IAAc;AACpBA,IAAAA,QAAQ,CAACL,YAAD,CAAR;AACA,GAFD;AAGA,CAJM","sourcesContent":["import axios from 'axios';\r\n\r\nconst SIGNUP_REQUEST = 'react-redux-gallery/auth/SIGNUP_REQUEST';\r\nconst SIGNUP_SUCCESS = 'react-redux-gallery/auth/SIGNUP_SUCCESS';\r\nconst SIGNUP_FAILURE = 'react-redux-gallery/auth/SIGNUP_FAILURE';\r\n\r\nconst LOGIN_REQUEST = 'react-redux-gallery/auth/LOGIN_REQUEST';\r\nconst LOGIN_SUCCESS = 'react-redux-gallery/auth/LOGIN_SUCCESS';\r\nconst LOGIN_FAILURE = 'react-redux-gallery/auth/LOGIN_FAILURE';\r\n\r\nconst initialState = {\r\n\tuser: {\r\n\t\temail: ''\r\n\t},\r\n\tloading: false,\r\n\terror: null\r\n};\r\n\r\nexport default function reducer(state = initialState, action) {\r\n\tswitch (action.type) {\r\n\t\tcase SIGNUP_REQUEST: {\r\n\t\t\treturn { ...state, loading: true };\r\n\t\t}\r\n\t\tcase SIGNUP_SUCCESS: {\r\n\t\t\treturn { ...state, loading: false, error: null };\r\n\t\t}\r\n\t\tcase SIGNUP_FAILURE: {\r\n\t\t\treturn { ...state, loading: false, error: action.payload };\r\n\t\t}\r\n\t\tdefault: {\r\n\t\t\treturn state;\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport const signupRequest = () => {\r\n\treturn {\r\n\t\ttype: SIGNUP_REQUEST\r\n\t};\r\n};\r\n\r\nexport const signupSuccess = (user) => {\r\n\treturn {\r\n\t\ttype: SIGNUP_SUCCESS\r\n\t};\r\n};\r\n\r\nexport const signupFailure = (error) => {\r\n\treturn {\r\n\t\ttype: SIGNUP_FAILURE,\r\n\t\tpayload: error\r\n\t};\r\n};\r\n\r\nexport const loginRequest = () => {\r\n\treturn {\r\n\t\ttype: LOGIN_REQUEST\r\n\t};\r\n};\r\n\r\nexport const loginSuccess = (user) => {\r\n\treturn {\r\n\t\ttype: LOGIN_SUCCESS,\r\n\t\tpayload: user\r\n\t};\r\n};\r\n\r\nexport const loginFailure = (error) => {\r\n\treturn {\r\n\t\ttype: LOGIN_FAILURE,\r\n\t\tpayload: error\r\n\t};\r\n};\r\n\r\nexport const signUp = (values) => {\r\n\treturn (dispatch) => {\r\n\t\tdispatch(signupRequest());\r\n\t\taxios\r\n\t\t\t.post('http://localhost:3000/signup', { values })\r\n\t\t\t.then((res) => {})\r\n\t\t\t.catch((error) => {\r\n\t\t\t\tconst { message } = error.response.data;\r\n\t\t\t\tdispatch(signupFailure(message));\r\n\t\t\t});\r\n\t};\r\n};\r\n\r\nexport const logIn = (values) => {\r\n\treturn (dispatch) => {\r\n\t\tdispatch(loginRequest);\r\n\t};\r\n};\r\n"]},"metadata":{},"sourceType":"module"}
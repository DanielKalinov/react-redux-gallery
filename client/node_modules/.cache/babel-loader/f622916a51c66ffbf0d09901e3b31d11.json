{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\danie\\\\Documents\\\\web-projects\\\\react-redux-gallery\\\\client\\\\src\\\\components\\\\pages\\\\Login.jsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\nimport * as Yup from 'yup';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { logIn } from '../../redux/ducks/auth';\nimport { useHistory } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Login = () => {\n  _s();\n\n  const auth = useSelector(state => state.auth);\n  const dispatch = useDispatch();\n  const history = useHistory();\n  const initialValues = {\n    email: '',\n    password: ''\n  };\n  const validationSchema = Yup.object({\n    email: Yup.string().email('Invalid email address').required('Required'),\n    password: Yup.string().required('Required')\n  });\n\n  const onSubmit = (values, onSubmitProps) => {\n    dispatch(logIn(values)).then(() => {\n      console.log('Ready');\n    });\n    onSubmitProps.resetForm();\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [auth.loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loading-overlay\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"spinner\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 6\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 5\n    }, this) : null, /*#__PURE__*/_jsxDEV(Formik, {\n      initialValues: initialValues,\n      validationSchema: validationSchema,\n      onSubmit: onSubmit,\n      validateOnMount: true,\n      children: formik => {\n        return /*#__PURE__*/_jsxDEV(Form, {\n          className: \"form\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Login\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 8\n          }, this), auth.err ? /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"server-err-box\",\n            children: auth.err\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 9\n          }, this) : null, /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"email\",\n              children: \"Email\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 50,\n              columnNumber: 9\n            }, this), /*#__PURE__*/_jsxDEV(Field, {\n              type: \"text\",\n              name: \"email\",\n              className: \"input\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 51,\n              columnNumber: 9\n            }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n              name: \"email\",\n              component: \"p\",\n              className: \"form-error-message\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 52,\n              columnNumber: 9\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 8\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"password\",\n              children: \"Password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 9\n            }, this), /*#__PURE__*/_jsxDEV(Field, {\n              type: \"password\",\n              name: \"password\",\n              className: \"input\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 9\n            }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n              name: \"password\",\n              component: \"p\",\n              className: \"form-error-message\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 9\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 8\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            className: \"button primary-button\",\n            disabled: !formik.isValid,\n            children: \"Log In\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 8\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 7\n        }, this);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 3\n  }, this);\n};\n\n_s(Login, \"bufItBihOlnPmejLUCbivMnaYVM=\", false, function () {\n  return [useSelector, useDispatch, useHistory];\n});\n\n_c = Login;\nexport default Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["C:/Users/danie/Documents/web-projects/react-redux-gallery/client/src/components/pages/Login.jsx"],"names":["React","Formik","Form","Field","ErrorMessage","Yup","useSelector","useDispatch","logIn","useHistory","Login","auth","state","dispatch","history","initialValues","email","password","validationSchema","object","string","required","onSubmit","values","onSubmitProps","then","console","log","resetForm","loading","formik","err","isValid"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { logIn } from '../../redux/ducks/auth';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nconst Login = () => {\r\n\tconst auth = useSelector((state) => state.auth);\r\n\tconst dispatch = useDispatch();\r\n\tconst history = useHistory();\r\n\r\n\tconst initialValues = {\r\n\t\temail: '',\r\n\t\tpassword: ''\r\n\t};\r\n\r\n\tconst validationSchema = Yup.object({\r\n\t\temail: Yup.string().email('Invalid email address').required('Required'),\r\n\t\tpassword: Yup.string().required('Required')\r\n\t});\r\n\r\n\tconst onSubmit = (values, onSubmitProps) => {\r\n\t\tdispatch(logIn(values)).then(() => {\r\n\t\t\tconsole.log('Ready');\r\n\t\t});\r\n\t\tonSubmitProps.resetForm();\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t{auth.loading ? (\r\n\t\t\t\t<div className='loading-overlay'>\r\n\t\t\t\t\t<div className='spinner'></div>\r\n\t\t\t\t</div>\r\n\t\t\t) : null}\r\n\t\t\t<Formik\r\n\t\t\t\tinitialValues={initialValues}\r\n\t\t\t\tvalidationSchema={validationSchema}\r\n\t\t\t\tonSubmit={onSubmit}\r\n\t\t\t\tvalidateOnMount>\r\n\t\t\t\t{(formik) => {\r\n\t\t\t\t\treturn (\r\n\t\t\t\t\t\t<Form className='form'>\r\n\t\t\t\t\t\t\t<h2>Login</h2>\r\n\t\t\t\t\t\t\t{auth.err ? (\r\n\t\t\t\t\t\t\t\t<div className='server-err-box'>{auth.err}</div>\r\n\t\t\t\t\t\t\t) : null}\r\n\t\t\t\t\t\t\t<div className='form-group'>\r\n\t\t\t\t\t\t\t\t<label htmlFor='email'>Email</label>\r\n\t\t\t\t\t\t\t\t<Field type='text' name='email' className='input' />\r\n\t\t\t\t\t\t\t\t<ErrorMessage\r\n\t\t\t\t\t\t\t\t\tname='email'\r\n\t\t\t\t\t\t\t\t\tcomponent='p'\r\n\t\t\t\t\t\t\t\t\tclassName='form-error-message'\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div className='form-group'>\r\n\t\t\t\t\t\t\t\t<label htmlFor='password'>Password</label>\r\n\t\t\t\t\t\t\t\t<Field type='password' name='password' className='input' />\r\n\t\t\t\t\t\t\t\t<ErrorMessage\r\n\t\t\t\t\t\t\t\t\tname='password'\r\n\t\t\t\t\t\t\t\t\tcomponent='p'\r\n\t\t\t\t\t\t\t\t\tclassName='form-error-message'\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<button\r\n\t\t\t\t\t\t\t\ttype='submit'\r\n\t\t\t\t\t\t\t\tclassName='button primary-button'\r\n\t\t\t\t\t\t\t\tdisabled={!formik.isValid}>\r\n\t\t\t\t\t\t\t\tLog In\r\n\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t</Form>\r\n\t\t\t\t\t);\r\n\t\t\t\t}}\r\n\t\t\t</Formik>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default Login;\r\n"]},"metadata":{},"sourceType":"module"}
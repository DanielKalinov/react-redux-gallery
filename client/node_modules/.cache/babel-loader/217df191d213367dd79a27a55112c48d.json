{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\danie\\\\Documents\\\\web_projects\\\\react_redux_gallery\\\\client\\\\src\\\\components\\\\pages\\\\Signup.jsx\";\nimport React from 'react';\nimport { Formik, Form, Field } from 'formik';\nimport * as Yup from 'yup';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialValues = {\n  email: '',\n  password: ''\n};\n\nconst onSubmit = values => {\n  console.log(values);\n};\n\nconst validationSchema = Yup.object({\n  email: Yup.string().email('Invalid email address').required('Required'),\n  password: Yup.string().min(8, 'Password must be at least 8 characters long').required('Required')\n});\n\nconst Signup = () => {\n  return /*#__PURE__*/_jsxDEV(Formik, {\n    initialValues: initialValues,\n    validationSchema: validationSchema,\n    onSubmit: onSubmit,\n    children: /*#__PURE__*/_jsxDEV(Form, {\n      className: \"form\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Signup\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"email\",\n          children: \"Email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(Field, {\n          type: \"text\",\n          name: \"email\",\n          className: \"input\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 6\n        }, this), formik.touched.email && formik.errors.email ? /*#__PURE__*/_jsxDEV(\"p\", {\n          children: formik.errors.email\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 7\n        }, this) : null]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"password\",\n          children: \"Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(Field, {\n          type: \"text\",\n          name: \"password\",\n          className: \"input\",\n          onChange: formik.handleChange,\n          onBlur: formik.handleBlur,\n          value: formik.values.password\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 6\n        }, this), formik.touched.password && formik.errors.password ? /*#__PURE__*/_jsxDEV(\"p\", {\n          children: formik.errors.password\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 7\n        }, this) : null]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"button primary-button\",\n        children: \"Sign Up\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 4\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 3\n  }, this);\n};\n\n_c = Signup;\nexport default Signup;\n\nvar _c;\n\n$RefreshReg$(_c, \"Signup\");","map":{"version":3,"sources":["C:/Users/danie/Documents/web_projects/react_redux_gallery/client/src/components/pages/Signup.jsx"],"names":["React","Formik","Form","Field","Yup","initialValues","email","password","onSubmit","values","console","log","validationSchema","object","string","required","min","Signup","formik","touched","errors","handleChange","handleBlur"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,MAAT,EAAiBC,IAAjB,EAAuBC,KAAvB,QAAoC,QAApC;AACA,OAAO,KAAKC,GAAZ,MAAqB,KAArB;;AAEA,MAAMC,aAAa,GAAG;AACrBC,EAAAA,KAAK,EAAE,EADc;AAErBC,EAAAA,QAAQ,EAAE;AAFW,CAAtB;;AAKA,MAAMC,QAAQ,GAAIC,MAAD,IAAY;AAC5BC,EAAAA,OAAO,CAACC,GAAR,CAAYF,MAAZ;AACA,CAFD;;AAIA,MAAMG,gBAAgB,GAAGR,GAAG,CAACS,MAAJ,CAAW;AACnCP,EAAAA,KAAK,EAAEF,GAAG,CAACU,MAAJ,GAAaR,KAAb,CAAmB,uBAAnB,EAA4CS,QAA5C,CAAqD,UAArD,CAD4B;AAEnCR,EAAAA,QAAQ,EAAEH,GAAG,CAACU,MAAJ,GACRE,GADQ,CACJ,CADI,EACD,6CADC,EAERD,QAFQ,CAEC,UAFD;AAFyB,CAAX,CAAzB;;AAOA,MAAME,MAAM,GAAG,MAAM;AACpB,sBACC,QAAC,MAAD;AACC,IAAA,aAAa,EAAEZ,aADhB;AAEC,IAAA,gBAAgB,EAAEO,gBAFnB;AAGC,IAAA,QAAQ,EAAEJ,QAHX;AAAA,2BAIC,QAAC,IAAD;AAAM,MAAA,SAAS,EAAC,MAAhB;AAAA,8BACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADD,eAEC;AAAK,QAAA,SAAS,EAAC,YAAf;AAAA,gCACC;AAAO,UAAA,OAAO,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADD,eAEC,QAAC,KAAD;AAAO,UAAA,IAAI,EAAC,MAAZ;AAAmB,UAAA,IAAI,EAAC,OAAxB;AAAgC,UAAA,SAAS,EAAC;AAA1C;AAAA;AAAA;AAAA;AAAA,gBAFD,EAGEU,MAAM,CAACC,OAAP,CAAeb,KAAf,IAAwBY,MAAM,CAACE,MAAP,CAAcd,KAAtC,gBACA;AAAA,oBAAIY,MAAM,CAACE,MAAP,CAAcd;AAAlB;AAAA;AAAA;AAAA;AAAA,gBADA,GAEG,IALL;AAAA;AAAA;AAAA;AAAA;AAAA,cAFD,eASC;AAAK,QAAA,SAAS,EAAC,YAAf;AAAA,gCACC;AAAO,UAAA,OAAO,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADD,eAEC,QAAC,KAAD;AACC,UAAA,IAAI,EAAC,MADN;AAEC,UAAA,IAAI,EAAC,UAFN;AAGC,UAAA,SAAS,EAAC,OAHX;AAIC,UAAA,QAAQ,EAAEY,MAAM,CAACG,YAJlB;AAKC,UAAA,MAAM,EAAEH,MAAM,CAACI,UALhB;AAMC,UAAA,KAAK,EAAEJ,MAAM,CAACT,MAAP,CAAcF;AANtB;AAAA;AAAA;AAAA;AAAA,gBAFD,EAUEW,MAAM,CAACC,OAAP,CAAeZ,QAAf,IAA2BW,MAAM,CAACE,MAAP,CAAcb,QAAzC,gBACA;AAAA,oBAAIW,MAAM,CAACE,MAAP,CAAcb;AAAlB;AAAA;AAAA;AAAA;AAAA,gBADA,GAEG,IAZL;AAAA;AAAA;AAAA;AAAA;AAAA,cATD,eAuBC;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAsB,QAAA,SAAS,EAAC,uBAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAvBD;AAAA;AAAA;AAAA;AAAA;AAAA;AAJD;AAAA;AAAA;AAAA;AAAA,UADD;AAkCA,CAnCD;;KAAMU,M;AAqCN,eAAeA,MAAf","sourcesContent":["import React from 'react';\r\nimport { Formik, Form, Field } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\nconst initialValues = {\r\n\temail: '',\r\n\tpassword: ''\r\n};\r\n\r\nconst onSubmit = (values) => {\r\n\tconsole.log(values);\r\n};\r\n\r\nconst validationSchema = Yup.object({\r\n\temail: Yup.string().email('Invalid email address').required('Required'),\r\n\tpassword: Yup.string()\r\n\t\t.min(8, 'Password must be at least 8 characters long')\r\n\t\t.required('Required')\r\n});\r\n\r\nconst Signup = () => {\r\n\treturn (\r\n\t\t<Formik\r\n\t\t\tinitialValues={initialValues}\r\n\t\t\tvalidationSchema={validationSchema}\r\n\t\t\tonSubmit={onSubmit}>\r\n\t\t\t<Form className='form'>\r\n\t\t\t\t<h2>Signup</h2>\r\n\t\t\t\t<div className='form-group'>\r\n\t\t\t\t\t<label htmlFor='email'>Email</label>\r\n\t\t\t\t\t<Field type='text' name='email' className='input' />\r\n\t\t\t\t\t{formik.touched.email && formik.errors.email ? (\r\n\t\t\t\t\t\t<p>{formik.errors.email}</p>\r\n\t\t\t\t\t) : null}\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className='form-group'>\r\n\t\t\t\t\t<label htmlFor='password'>Password</label>\r\n\t\t\t\t\t<Field\r\n\t\t\t\t\t\ttype='text'\r\n\t\t\t\t\t\tname='password'\r\n\t\t\t\t\t\tclassName='input'\r\n\t\t\t\t\t\tonChange={formik.handleChange}\r\n\t\t\t\t\t\tonBlur={formik.handleBlur}\r\n\t\t\t\t\t\tvalue={formik.values.password}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t{formik.touched.password && formik.errors.password ? (\r\n\t\t\t\t\t\t<p>{formik.errors.password}</p>\r\n\t\t\t\t\t) : null}\r\n\t\t\t\t</div>\r\n\t\t\t\t<button type='submit' className='button primary-button'>\r\n\t\t\t\t\tSign Up\r\n\t\t\t\t</button>\r\n\t\t\t</Form>\r\n\t\t</Formik>\r\n\t);\r\n};\r\n\r\nexport default Signup;\r\n"]},"metadata":{},"sourceType":"module"}